plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.devtools.ksp") version("1.7.0-1.0.6")
    id 'com.google.gms.google-services'
}

apply plugin: 'dagger.hilt.android.plugin'

ksp {
    arg("verbose", "true")
}

apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.hackbyte.recibot"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.2.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    kotlin {
        sourceSets {
            main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
            test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
        }
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    implementation 'com.google.firebase:firebase-firestore-ktx:24.2.1'
    def nav_version = "1.6.13-beta"
    implementation "io.github.raamcosta.compose-destinations:animations-core:$nav_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$nav_version"


    implementation 'com.google.firebase:firebase-auth-ktx:21.0.6'
    def compose_version = "1.3.0-alpha01"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha14'
    implementation 'androidx.compose.compiler:compiler:1.2.0'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'

    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'

    def ktor_version = "2.0.3"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation("io.ktor:ktor-client-content-negotiation:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")
    implementation("io.ktor:ktor-client-logging:$ktor_version")

    implementation("io.coil-kt:coil-compose:2.1.0")


    def roomVersion = "2.4.2"

    implementation("androidx.room:room-runtime:$roomVersion")
    ksp("androidx.room:room-compiler:$roomVersion")

    implementation('com.google.devtools.ksp:symbol-processing-api:1.7.10-1.0.6')

    def accompanistVersion = "0.24.13-rc"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-webview:$accompanistVersion"
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    //Splash screen Api
    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.42'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptTest 'com.google.dagger:hilt-compiler:2.42'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

kapt {
    correctErrorTypes true
}